import numpy as np
#  Задание 3 Решить дифференциальное уравнение d2y/dt2 = d^2y/dx^2  с начальным условием
# 2x(x+0.2)+0.4
# y(0,t) = 2t+0.4
# y(0.6,t) = 1,36
# x принадлежит отрезку [0,2]
# h = 0,02  0<=t<=3   delta t =0,01
# для решения этой задачи и построения графика пользовался сайтом  devpractice.ru/matplotlib
# ----------------------------------------------------------------------------

# Глобальные параметры которые мы знаем
h = 0.02  # размер сетки
x0 = 0    # начала отезка
xn = 2    # конец отрезка
Array_x = np.arange(x0, xn, h)  # создадим массив для x в следующем диапазоне. Начало 0 конец 1 и шаг 0.01
deltat = 0.01  # шаг для t
coeff = deltat / (h * h)
t0 = 0  # левое ограничение для t
tn = 3  # правое ограничение для t
Array_t = np.arange(t0, tn, deltat)  # создадим массив для t в следующем диапазоне. Начало 0 конец 4 и шаг 0.01
# функция для начального условия
def f(x):
    return 2*x*(x+0.2)+0.4
# функция для левой границы y(0,t)
def f0(t):
    return 2*t+0.4
# функция для правой границы y(0.6,t)
def f06(t):
    return 1.36

Z = np.empty(shape=(tn*100, tn*10))    # размер пространства для графика изходя из условия задачи

for i in range(30):
    Z[0][i] = f(i * h)

for j in range(300):
    Z[j][0] = f0(j * deltat)
    Z[j][-1] = f06(j * deltat)

# выводим систему из 98 уравнений так как на границах знаем
def solve(b):
    # тут матрица кторая состоит -3 и 1 по методу трёх диагональной прогонке
    A = np.zeros(shape=(28, 28))
    A[0][0] = -2*coeff
    A[27][27] = -2*coeff
    for i in range(1, 27):
        A[i][i] = -2 * coeff
        A[i + 1][i] = coeff
        A[i][i - 1] = coeff
    x = np.linalg.inv(A) @ b # матричное умножение матрицы и наших уравнений
    return x


for k in range(299):
    b = -Z[k]
    b = b[1:-1]
    b[0] = -Z[k][1] - coeff * Z[k + 1][0]  # при j = 1
    b[-1] = -Z[k][28] - coeff * Z[k][29]  # при j = n - 2
    x = solve(b)
    Z[k + 1][1:-1] = x

with open('out.txt', 'w') as file:
    s = ''
    for i in range(300):
        for j in range(30):
            s += str(Z[i][j]) + ' '
        s += '\n'
    file.write(s)
